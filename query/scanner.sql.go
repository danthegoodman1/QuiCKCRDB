// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: scanner.sql

package query

import (
	"context"
)

const peekTopLevelQueues = `-- name: PeekTopLevelQueues :many
select queue_zone, vesting_time, lease_id, hash_token
from quick_top_level_queue
where hash_token < $1
and vesting_time <= now()
limit $2
`

type PeekTopLevelQueuesParams struct {
	HashToken int64
	Limit     int32
}

func (q *Queries) PeekTopLevelQueues(ctx context.Context, arg PeekTopLevelQueuesParams) ([]QuickTopLevelQueue, error) {
	rows, err := q.db.Query(ctx, peekTopLevelQueues, arg.HashToken, arg.Limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []QuickTopLevelQueue
	for rows.Next() {
		var i QuickTopLevelQueue
		if err := rows.Scan(
			&i.QueueZone,
			&i.VestingTime,
			&i.LeaseID,
			&i.HashToken,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
